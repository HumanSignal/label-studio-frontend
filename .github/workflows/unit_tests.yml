name: "Component/Unit Tests"

on:
  workflow_call:
    inputs:
      sha:
        required: true
        type: string

env:
  # increment it in case if you need to reset cache
  CACHE_NAME_PREFIX: v3
  NODE: '18'

jobs:
  run:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    # ci can be skipped with `[skip ci]` prefix in message
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: hmarr/debug-action@v2.1.0

      - name: "Checkout codebase"
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ inputs.sha }}

      - name: "Setup NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE }}"

      - name: Upgrade Yarn
        run: npm install -g yarn@1.22

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Configure yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ env.CACHE_NAME_PREFIX }}-${{ runner.os }}-node-${{ env.NODE }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_NAME_PREFIX }}-${{ runner.os }}-node-${{ env.NODE }}-

      - name: Run unit tests
        run: yarn install --frozen-lockfile && yarn test:coverage

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3.1.1
      #   if: ${{ !github.event.pull_request.head.repo.fork }}
      #   with:
      #     fail_ci_if_error: true
      #     token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload coverage to Artifacts
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: ./.github/actions/upload-artifact
        with:
          name: unit-tests-coverage
          path: coverage/
