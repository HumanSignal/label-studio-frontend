name: Build and Test

on:
  push:
    branches: [master, "**"]

env:
  # increment it in case if you need to reset cache
  CACHE_NAME_PREFIX: v3
  NODE: '14'

jobs:
  build:
    # ci can be skipped with `[skip ci]` prefix in message
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: "${{ env.NODE }}"

    - name: Get CPU info
      id: "cpu-info"
      run: echo "::set-output name=cores-count::$(cat /proc/cpuinfo  | grep processor | wc -l)"

    - name: Upgrade Yarn
      run: npm install -g yarn@1.22

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Configure yarn cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ env.CACHE_NAME_PREFIX }}-${{ runner.os }}-node-${{ env.NODE }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          yarn-${{ env.CACHE_NAME_PREFIX }}-${{ runner.os }}-node-${{ env.NODE }}-

    - name: Print Yarn cache size
      run: du -d 0 -h ${{ steps.yarn-cache-dir-path.outputs.dir }}

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Unit tests
      run: yarn test && yarn test:coverage

    - name: Build distribution package
      timeout-minutes: 10
      run: yarn run build:module
      env:
        CI: false # on true webpack breaks on warnings, and we have them a lot
        NODE_ENV: 'production'

    # run http-server with build in background (will be killed after job ends)
    # do this only for master branch (so only for push event)
    # because pr can contain unfinished job
    - name: "Run server"
      run: npx serve -l tcp://localhost:3000 build &
      if: github.event_name == 'push'

    - id: wait_for_npx_server
      name: "Wait for server"
      timeout-minutes: 1
      run: |
        while [ "$(curl -s -o /dev/null -L -w ''%{http_code}'' "http://localhost:3000/")" != "200" ]; do
          echo "=> Waiting for service to become available" && sleep 2s
        done

    - name: "Setup e2e"
      if: github.event_name == 'push'
      timeout-minutes: 1
      run: |
        set -euo pipefail
        cd e2e
        yarn install --frozen-lockfile

    - name: Run e2e test suite
      if: github.event_name == 'push'
      timeout-minutes: 30
      run: |
        set -euo pipefail
        cd e2e
        yarn run test:ci ${{ steps.cpu-info.outputs.cores-count }}

    # - name: "Convert coverage report to Istanbul"
    #   if: github.event_name == 'push'
    #   run: |
    #     set -euo pipefail
    #     cd e2e
    #     yarn run coverage:istanbul
    #     yarn run coverage:report

    # - name: "Upload e2e coverage to Codecov"
    #   uses: codecov/codecov-action@v3.1.0
    #   with:
    #     name: codecov-general
    #     directory: ./e2e/output/coverage
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     fail_ci_if_error: true

    - uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: e2e output
        path: e2e/output/

    # upload this build as artifact to current Action
    - uses: actions/upload-artifact@v3
      with:
        name: build ${{ github.event.pull_request.head.sha || github.sha }}
        path: build/
