name: Sync PR LS

on:
  pull_request_target:
    types:
      - opened
      - closed
      - converted_to_draft
      - ready_for_review
      - synchronize
    branches:
      - master
      - 'ls-release/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}

env:
  DOWNSTREAM_REPO_OWNER: heartexlabs
  DOWNSTREAM_REPO: label-studio

jobs:
  sync:
    name: "Sync"
    if: startsWith(github.head_ref, 'fb-')
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v2.1.0

      - name: Sync PR
        uses: actions/github-script@v6
        id: sync-pr
        env:
          TITLE: ${{ github.event.pull_request.title }}
        with:
          github-token: ${{ secrets.GIT_PAT }}
          script: |
            const [owner, repo] = '${{ github.event.pull_request.head.repo.full_name || github.repository }}'.split('/');
            let event_action = '${{ github.event.action }}'
            let commit_sha = '${{ github.event.pull_request.head.sha }}'
            if (${{ github.event.pull_request.merged }}) {
              event_action = 'merged'
              commit_sha = '${{ github.sha }}'
            }
            const getCommitResponse = await github.rest.repos.getCommit({
              owner,
              repo,
              ref: commit_sha
            });
            const result = await github.rest.repos.createDispatchEvent({
              owner: '${{ env.DOWNSTREAM_REPO_OWNER }}',
              repo: '${{ env.DOWNSTREAM_REPO }}',
              event_type: 'upstream_repo_update',
              client_payload: {
                branch_name: '${{ github.head_ref }}',
                base_branch_name: '${{ github.base_ref }}',
                repo_name: '${{ github.event.pull_request.head.repo.full_name || github.repository }}',
                commit_sha : commit_sha,
                title: process.env.TITLE,
                html_url: '${{ github.event.pull_request.html_url }}',
                actor: '${{ github.actor }}',
                author_username: getCommitResponse.data.commit.author.name,
                author_email: getCommitResponse.data.commit.author.email,
                event_action: event_action
              }
            });
            return result
